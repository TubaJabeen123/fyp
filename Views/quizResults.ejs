<!DOCTYPE html>
<html lang="en">
<head>
  <title>Result Console  </title>
  <meta charset="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="description" content="Unicat project" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />

  <!-- CSS files -->
  <link rel="stylesheet" type="text/css" href="/bootstrap4/bootstrap.min.css" />
  <link href="/plugins/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" type="text/css" />
  <link rel="stylesheet" type="text/css" href="/plugins/OwlCarousel2-2.2.1/owl.carousel.css" />
  <link rel="stylesheet" type="text/css" href="/plugins/OwlCarousel2-2.2.1/owl.theme.default.css" />
  <link rel="stylesheet" type="text/css" href="/plugins/OwlCarousel2-2.2.1/animate.css" />
  <link rel="stylesheet" type="text/css" href="/css-file/main_styles.css" />
  <link rel="stylesheet" type="text/css" href="/css-file/responsive.css" />
  <link rel="stylesheet" href="/css-file/tchrConsole.css">

  <!-- External resources -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.0.3/css/font-awesome.css">
<link rel="stylesheet" href="/css-file/QuizStyle.css">
<!-- <style>
 .home{
  padding-top: 50px;
  padding-bottom: 40px;
  margin-top: 80px;
  margin-bottom: 40;
 }

</style> -->
<style>




  .modal {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: white;
    padding: 20px;

    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);
    z-index: 1000;
  }
  .modal-active {
    display: block;
  }
  /* .blur-background {
    filter: blur(5px);
    pointer-events: none;
  } */
  /* .footer{
    background-color: black;
  } */
  .footer_links_container li{ 
    background-color: #232835;
  }
  .footer_social li{
    background-color: #1e2434;
  }
  .footer_contact_info li{
    background-color: #1e2434;

  }
  .table-container{
  overflow-x: auto;
  }
  .results-container{

  min-width: 600px;}
</style>

</head>

<body>
  <div class="super_container">
    <!-- Header Section -->
    <header class="header">
      <!-- Top Bar -->
     

      <!-- Header Content -->
      <div class="header_container">
        <div class="container">
          <div class="row">
            <div class="col">
              <div class="header_content d-flex flex-row align-items-center justify-content-start">
                <div
                class="header_content d-flex flex-row align-items-center justify-content-start">
                <a href="/tchr/quiz" style="display: flex; align-items: center; text-decoration: none;  font-size: 30px;">
                  <i class="fa fa-arrow-left" style="margin: 9px; padding: 10px;"></i>
                  <!-- <i class="fas fa-arrow-left"></i>  -->
                </a>
                  <img src="/images/R.jpeg" class="uniLogo" alt="UniLogo">
                <div class="logo_container">
                  <a href="#">
                    <div class="logo_text">Physics<span>Verse</span></div>
                  </a>
                </div>
    <!-- HTML !-->

    
  

     
            </div>
            <nav class="main_nav_contaner ml-auto">
              <ul class="main_nav" ">
              
                <li>
                  <a href="/tchr/tchrConsole" style="display: flex; align-items: center; text-decoration: none;  font-size: 30px; ">
                    <i class="fa fa-home" style="margin-right: 2px; "></i>
                  </a>
                </li>
              </ul>
             
            </nav>
          </div>
           <!-- Filter Form -->
   
        </div>
      </div>
    </header>

    <!-- Home Section -->
    <div class="container_1">
      <!-- Filter Section -->
      <div class="filter-container">
        <form method="GET" action="/tchr/quiz-results" style="display: flex; flex-direction: column; gap: 20px;">
         
    
          <label for="exp_no">
            Filter by Experiment No:
            <select name="exp_no" onchange="this.form.submit()">
              <option value="">All Experiments</option>
              <% expNumbers.forEach(exp => { %>
                <option value="<%= exp %>"><%= exp %></option>
              <% }) %>
            </select>
          </label>
        </form>
        <div style="text-align: center; margin-top: 10px; padding-right: 60px; padding-left: 20px;">
          <button class="btn btn-primary" onclick="openGraphModal()">View Graphs</button>
        </div>      </div>

      
          <!-- Experiment Results Section -->
          <div class="table-container" style="margin-top: 20px;">
            <div class="results-container">
        <% if (quizResults && quizResults.length > 0) { %>
          <h2 style="text-align: center; font-weight: bold; font-size: 30px;">Quiz Result</h2>

          <!-- <h2>Quiz Results</h2> -->
          <table id="quizTable">
            <thead>
              <tr>
                <th>Student Name</th>
                <th>Experiment No</th>
                <th>Marks Obtained</th>
                <th>Total Marks</th>  <!-- Added a header for clarity -->
                <th>Action</th>
              </tr>
            </thead>
            <tbody>
              <% quizResults.forEach((result, i) => { %>
                <tr data-exp="<%= result.exp_no %>">
                  <td><%= result.fname %></td>
                  <td><%= result.exp_no %></td>
                  <td class="marks"><%= result.marks_obtained %></td>
                  <td><%= result.marks_obtained %> / <%= result.total_questions * 5 %></td>
                  <td>
                    <!-- Hidden fields -->
                    <% correctAnswers.forEach((q, index) => { %>
                      <input type="hidden" id="correctAnswers-<%= index %>" value="<%= q.answer %>">
                    <% }); %>
                    <input type="hidden" id="userAnswers-<%= i %>" value="<%= result.answers_submitted.join(', ') %>">
          
                    <!-- View Button -->
                    <button onclick="openModal('<%= i %>')">View</button>  <!-- Wrapped i in quotes -->
                  </td>
                </tr>
              <% }) %>
            </tbody>
          </table>
       
           <!-- Modal for Quiz (optional) -->
      <div id="modal" class="modal">
        <div class="modal-content">
          <h2>Quiz Details</h2>
          <p><strong>Correct Answers:</strong></p>
          <ul id="correctAnswersList"></ul>
          <p><strong>User Submitted Answers:</strong></p>
          <ul id="userAnswersList"></ul>
          <button onclick="closeModal()">Close</button>
        </div>
      </div>
     

    <% } else { %>
      <p>No quiz data available to display correct answers.</p>
    <% } %>
  </div>
 </div>
  <div class="table-container" style="margin-top: 20px; margin-right: 45px;"">
<div class="results-container">
    <% if (expResults && expResults.length > 0) { %>
      <h2 style="text-align: center; font-weight: bold; font-size: 30px;">Experiemnt Result</h2>
      <table id="experimentTable" class="table table-striped">
        <thead>
          <tr>
            <th>Experiment No</th>
            <th>Experiment Title</th>
            <th>Grade</th>
            <th>Percentage</th>
            <th>Submission Date</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          <% expResults.forEach((result, i) => { %>
            <tr data-exp="<%= result.exp_no %>">
              <td><%= result.exp_no %></td>
              <td><%= result.exp_title %></td>
              <td class="grade"><%= result.grade %></td>
              <td><%= Math.round((result.grade / 15) * 100) %>%</td>  <!-- Calculate percentage -->
              <td><%= new Date(result.createdAt).toLocaleDateString() %></td>
              <td>
                <!-- View Button -->
                
                <!-- Edit Button if needed -->
                <a href="/tchr/delete-experiment/<%= result._id %>" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this experiment result?')">Delete</a>
              </td>
            </tr>
          <% }) %>
        </tbody>
      </table>
        <!-- Pie Chart (inside Quiz Results Container but outside the table) -->
     
    <% } else { %>
      <div class="alert alert-info">No experiment results found.</div>
    <% } %>
  </div>
  
</div>
</div>
        <!-- Button to open the modal -->


<!-- Modal structure -->
<div id="graphModal" class="modal" style="display: none;">
  <div class="modal-content" style="position: relative; padding: 20px;">
    <span class="close" onclick="closeGraphModal()" style="position: absolute; top: 10px; right: 20px; font-size: 24px; cursor: pointer;">&times;</span>
    <h2 style="text-align: center;">Quiz and Experiment Results</h2>

    <div style="display: flex; justify-content: center; gap: 40px; margin-top: 20px;">
      <div style="text-align: center;">
        <h4 style="font-size: 12px;">Quiz Result Chart</h4>
        <canvas id="pie-chart" width="300" height="300"></canvas>
      </div>
      <div style="text-align: center;">
        <h4 style="font-size: 12px;">Experiment Result Chart</h4>
        <canvas id="pie-chart-1" width="300" height="300"></canvas>
      </div>
    </div>
  </div>
</div>


      
    <script>
  const quizData = JSON.parse('<%- JSON.stringify(quizResults) %>');
  function openModal(index) {
  const result = quizData[index];

  // Fetching the correct and user-submitted answers
  const correctAnswers = result.correctAnswers || [];
  const userAnswers = result.answers_submitted || [];

  // Creating the list for correct answers
  const correctList = correctAnswers.map((ans, i) => {
    return `<li>Q${i + 1}: <span style="color: green;">${ans}</span></li>`; // Correct answers in green
  }).join('');

  // Creating the list for user answers
  const userList = userAnswers.map((ans, i) => {
    const isCorrect = ans === correctAnswers[i];  // Check if user answer is correct
    return `<li>Q${i + 1}: <span style="color: ${isCorrect ? 'green' : 'red'};">${ans}</span></li>`; // Color user answers accordingly
  }).join('');

  // Update the modal lists with correct and user answers
  document.getElementById('correctAnswersList').innerHTML = correctList;
  document.getElementById('userAnswersList').innerHTML = userList;

  // Display the modal and apply blur to background
  document.getElementById('modal').classList.add('modal-active');
  document.body.classList.add('blur-background');
}


    
      function closeModal() {
        document.getElementById('modal').classList.remove('modal-active');
        document.body.classList.remove('blur-background');
      }



      document.addEventListener("DOMContentLoaded", function () {
        applyQuizFilter();
        applyExpFilter();
    });
    // Global chart instance
    let chartInstance=null;
    let expChartInstance;   // Chart for experiments

    function openGraphModal() {
    document.getElementById('graphModal').style.display = 'block';
    
    // When opening modal, reapply filters and draw charts
    applyQuizFilter();
    applyExpFilter();
}

function closeGraphModal() {
    document.getElementById('graphModal').style.display = 'none';
}

// ------------ Quiz Filter & Chart (existing code) ----------------
function applyQuizFilter() {
    const selectedExp = document.querySelector("select[name='exp_no']").value;
    const rows = document.querySelectorAll("#quizTable tbody tr");

    let failCount = 0, passCount = 0, excellentCount = 0;

    rows.forEach(row => {
        const expNo = row.getAttribute("data-exp");
        const marksText = row.querySelector(".marks").innerText;
        const marks = parseInt(marksText.split("/")[0].trim()); // Extract marks before '/'

        if (selectedExp && expNo !== selectedExp) {
            row.style.display = "none";
        } else {
            row.style.display = "";
            if (marks < 5) failCount++;
            else if (marks >= 5 && marks <= 10) passCount++;
            else excellentCount++;
        }
    });

    setTimeout(() => updateQuizChart(failCount, passCount, excellentCount), 100);
}
function updateQuizChart(fail, pass, excellent) {
    const ctx = document.getElementById("pie-chart").getContext("2d");

    if (chartInstance) {
        chartInstance.destroy();
    }

    chartInstance = new Chart(ctx, {
        type: "pie",
        data: {
            labels: ["Fail (<5)", "Pass (5-10)", "Excellent (>10)"],
            datasets: [{
                backgroundColor: ["#FF6384", "#36A2EB", "#4CAF50"],
                data: [fail, pass, excellent]
            }]
        },
        options: {
            responsive: false,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: true,
                    position: "top"
                }
            }
        }
    });
}

// Attach event listener for quiz filter
document.querySelector("select[name='exp_no']").addEventListener("change", applyQuizFilter);

// ------------ Experiment Filter & Chart (NEW added code) ------------
function applyExpFilter() {
    const selectedExp = document.querySelector("select[name='exp_no']").value;
    const rows = document.querySelectorAll("#experimentTable tbody tr");

    let gradeA = 0, gradeB = 0, gradeC = 0, gradeD = 0, gradeF = 0;

    rows.forEach(row => {
        const expNo = row.getAttribute("data-exp");
        const gradeText = row.querySelector(".grade").innerText;
        const grade = parseFloat(gradeText);

        if (selectedExp && expNo !== selectedExp) {
            row.style.display = "none";
        } else {
            row.style.display = "";
            const percentage = (grade / 15) * 100;

            if (percentage > 80) gradeA++;
            else if (percentage > 65) gradeB++;
            else if (percentage > 50) gradeC++;
            else if (percentage > 35) gradeD++;
            else gradeF++;
        }
    });

    setTimeout(() => updateExpChart(gradeA, gradeB, gradeC, gradeD, gradeF), 100);
}

function updateExpChart(A, B, C, D, F) {
    const ctx = document.getElementById("pie-chart-1").getContext("2d");

    if (expChartInstance) {
        expChartInstance.destroy();
    }

    expChartInstance = new Chart(ctx, {
        type: "pie",
        data: {
            labels: ["A (>80%)", "B (65-80%)", "C (50-65%)", "D (35-50%)", "F (<35%)"],
            datasets: [{
                backgroundColor: ["#4CAF50", "#2196F3", "#FFC107", "#FF9800", "#F44336"],
                data: [A, B, C, D, F]
            }]
        },
        options: {
            responsive: false,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: true,
                    position: "top"
                }
            }
        }
    });
}

// Attach event listener for experiment filter
document.querySelector("select[name='exp_no']").addEventListener("change", applyExpFilter);






// function applyFilter() {
//     const selectedExp = document.querySelector("select[name='exp_no']").value;
//     const rows = document.querySelectorAll("#quizTable tbody tr");

//     let failCount = 0, passCount = 0, excellentCount = 0;

//     rows.forEach(row => {
//         const expNo = row.getAttribute("data-exp");
//         const marksText = row.querySelector(".marks").innerText;
//         const marks = parseInt(marksText.split("/")[0].trim()); // Extract marks before '/'

//         // Filter table rows
//         if (selectedExp && expNo !== selectedExp) {
//             row.style.display = "none";
//         } else {
//             row.style.display = "";
//             // Categorize marks
//             if (marks < 5) failCount++;
//             else if (marks >= 5 && marks <= 10) passCount++;
//             else excellentCount++;
//         }
//     });

//     // Delay chart update to ensure smooth transition
//     setTimeout(() => updateChart(failCount, passCount, excellentCount), 100);
// }

// function updateChart(fail, pass, excellent) {
//     // Remove previous canvas & create a new one to prevent resizing issues
//     const oldCanvas = document.getElementById("pie-chart");
//     oldCanvas.remove(); // Remove the previous canvas

//     const newCanvas = document.createElement("canvas");
//     newCanvas.id = "pie-chart";
//     newCanvas.width = 300; // Adjust size
//     newCanvas.height = 300; // Adjust size
//     document.querySelector(".results-container").appendChild(newCanvas); // Append new canvas

//     const ctx = newCanvas.getContext("2d");

//     if (chartInstance) {
//         chartInstance.destroy(); // Destroy old chart if exists
//     }

//     // Create new pie chart
//     chartInstance = new Chart(ctx, {
//         type: "pie",
//         data: {
//             labels: ["Fail (<5)", "Pass (5-10)", "Excellent (>10)"],
//             datasets: [{
//                 backgroundColor: ["#FF6384", "#36A2EB", "#4CAF50"],
//                 data: [fail, pass, excellent]
//             }]
//         },
//         options: {
//             responsive: false, // Ensure fixed size
//             maintainAspectRatio: false,
//             plugins: {
//                 legend: {
//                     display: true,
//                     position: "top"
//                 }
//             }
//         }
//     });
// }

// Attach event listener to filter dropdown
// document.querySelector("select[name='exp_no']").addEventListener("change", applyFilter);
</script>
    
    <footer class="footer">
      <div class="footer_background" style="background-image: url(/images/footer_background.png)"></div>
      <div class="container">
        <div class="row footer_row">
          <!-- About Section -->
          <div class="col-lg-4 col-md-6 footer_col">
            <div class="footer_section footer_about">
              <div class="footer_logo_container">
                <a href="#">
                  <div class="footer_logo_text">Physics<span>Verse</span></div>
                </a>
              </div>
              <div class="footer_about_text">
                <p>A virtual physics Lab. Explore the wonders of physics with PhysicsVerse.</p>
              </div>
              <div class="footer_social">
                <ul>
                  <li><a href="#"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
                  <li><a href="#"><i class="fa fa-google-plus" aria-hidden="true"></i></a></li>
                  <li><a href="#"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
                  <li><a href="#"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
                </ul>
              </div>
            </div>
          </div>
  
          <!-- Useful Links Section -->
          <div class="col-lg-3 col-md-6 footer_col">
            <div class="footer_section footer_links">
              <div class="footer_title">Useful Links</div>
              <div class="footer_links_container">
                <ul>
                  <li><a href="#" id="footer_home">Home</a></li>
                  <li><a href="#" id="footer_about">About Us</a></li>
                  <!-- <li><a href="#" id="footer_courses">Experiments</a></li> -->
                  <li><a href="#" id="footer_contact">Contact</a></li>
                </ul>
              </div>
            </div>
          </div>
  
          <!-- Contact Section -->
          <div class="col-lg-5 col-md-12 footer_col">
            <div class="footer_section footer_contact">
              <div class="footer_title">Contact Us</div>
              <div class="footer_contact_info">
                <ul>
                  <li><i class="fa fa-user" aria-hidden="true"></i>Tuba Jabeen | Isha Eman</li>
                  <li><i class="fa fa-phone" aria-hidden="true"></i> +92-3345605064 | +92-3019575969</li>
                  <li><i class="fa fa-envelope" aria-hidden="true"></i> fa21-bcs-033@cuiatk.edu.pk |
                    fa21-bcs-046@cuiatk.edu.pk</li>
                </ul>
              </div>
            </div>
          </div>
        </div> <!-- Close footer_row -->
  
        <!-- Copyright Section -->
        <div class="row">
          <div class="col">
            <div class="footer_copyright">
              <p>&copy; 2025 PhysicsVerse. All rights reserved.</p>
            </div>
          </div>
        </div>
      </div>
    </footer>
  </div>

  <!-- jQuery (make sure this is above Bootstrap JS) -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
  <!-- Bootstrap JS Bundle -->
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js"></script>
  
  <!-- Local JavaScript files -->
  <script src="/js/jquery-3.2.1.min.js"></script>
  <script src="/bootstrap4/popper.js"></script>
  <script src="/bootstrap4/bootstrap.min.js"></script>
  <script src="/plugins/greensock/TweenMax.min.js"></script>
  <script src="/plugins/greensock/TimelineMax.min.js"></script>
  <script src="/plugins/scrollmagic/ScrollMagic.min.js"></script>
  <script src="/plugins/greensock/animation.gsap.min.js"></script>
  <script src="/plugins/greensock/ScrollToPlugin.min.js"></script>
  <script src="/plugins/OwlCarousel2-2.2.1/owl.carousel.js"></script>
  <script src="/plugins/easing/easing.js"></script>
  <script src="/plugins/parallax-js-master/parallax.min.js"></script>
  
  <!-- Custom JavaScript -->
  <script src="/js/custom.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <!-- Local JavaScript files -->
  <script>
      
//     function openModal(index) {
//       const correctAnswers = document.getElementById(`correctAnswers-${index}`).value.split(', ');
//       const userAnswers = document.getElementById(`userAnswers-${index}`).value.split(', ');
  
//       document.getElementById('correctAnswersList').innerHTML = correctAnswers.map((ans, i) => `<li>Q${i + 1}: ${ans}</li>`).join('');
//       document.getElementById('userAnswersList').innerHTML = userAnswers.map((ans, i) => `<li>Q${i + 1}: ${ans}</li>`).join('');
  
//       document.getElementById('modal').classList.add('modal-active');
//       document.body.classList.add('blur-background');
//     }
  
//     function closeModal() {
//       document.getElementById('modal').classList.remove('modal-active');
//       document.body.classList.remove('blur-background');
//     }
//     document.addEventListener("DOMContentLoaded", function () {
//       applyFilter();
//   });
//   let chartInstance = null; // Global chart instance

// function applyFilter() {
//   const selectedExp = document.querySelector("select[name='exp_no']").value;
//   const rows = document.querySelectorAll("#quizTable tbody tr");

//   let failCount = 0, passCount = 0, excellentCount = 0;

//   rows.forEach(row => {
//       const expNo = row.getAttribute("data-exp");
//       const marksText = row.querySelector(".marks").innerText;
//       const marks = parseInt(marksText.split("/")[0].trim()); // Extract marks before '/'

//       // Filter table rows
//       if (selectedExp && expNo !== selectedExp) {
//           row.style.display = "none";
//       } else {
//           row.style.display = "";
//           // Categorize marks
//           if (marks < 5) failCount++;
//           else if (marks >= 5 && marks <= 10) passCount++;
//           else excellentCount++;
//       }
//   });

//   // Delay chart update to ensure smooth transition
//   setTimeout(() => updateChart(failCount, passCount, excellentCount), 100);
// }

// function updateChart(fail, pass, excellent) {
//   // Remove previous canvas & create a new one to prevent resizing issues
//   const oldCanvas = document.getElementById("pie-chart");
//   oldCanvas.remove(); // Remove the previous canvas

//   const newCanvas = document.createElement("canvas");
//   newCanvas.id = "pie-chart";
//   newCanvas.width = 300; // Adjust size
//   newCanvas.height = 300; // Adjust size
//   document.querySelector(".results-container").appendChild(newCanvas); // Append new canvas

//   const ctx = newCanvas.getContext("2d");

//   if (chartInstance) {
//       chartInstance.destroy(); // Destroy old chart if exists
//   }

//   // Create new pie chart
//   chartInstance = new Chart(ctx, {
//       type: "pie",
//       data: {
//           labels: ["Fail (<5)", "Pass (5-10)", "Excellent (>10)"],
//           datasets: [{
//               backgroundColor: ["#FF6384", "#36A2EB", "#4CAF50"],
//               data: [fail, pass, excellent]
//           }]
//       },
//       options: {
//           responsive: false, // Ensure fixed size
//           maintainAspectRatio: false,
//           plugins: {
//               legend: {
//                   display: true,
//                   position: "top"
//               }
//           }
//       }
//   });
// }

// // Attach event listener to filter dropdown
// document.querySelector("select[name='exp_no']").addEventListener("change", applyFilter);


  </script>
  
</body>
</html>
